
class Solution {
    public int calculate(String s) {
        int len = s.length();
        int sign = 1;
        int ans =0;
        int curNo = 0;
        Stack<Integer> stack = new Stack<>();
        
        for(int i=0; i<len; i++){
            char ch = s.charAt(i);
            if(Character.isDigit(ch)){
             curNo= ch-'0';
                while(i+1<len && Character.isDigit(s.charAt(i+1))) {
                    curNo = curNo*10+s.charAt(i+1)-'0';
                   i++; 
                }
                
            
            curNo = curNo*sign;
            ans+= curNo;
            sign =1;
            }
            else if(ch =='+'){
                sign = 1;
            }
            else if(ch =='-'){
                sign = -1;
            }
            else if(ch =='('){
                stack.push(ans);
                stack.push(sign);
                ans= 0;
                sign =1;
                
            }
            else if(ch ==')'){
                int prevSign = stack.pop();
                ans = prevSign * ans;
                int prevAns = stack.pop();
                ans = ans + prevAns;
            }
            
        }
        return ans;
    }
    
}
     

